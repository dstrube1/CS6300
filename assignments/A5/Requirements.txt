JobManager 
attr:
	-currentJob : CurrentJob = null
	-jobs : List<Job> = empty list
op:
	+enterCurrentJobDetails(CurrentJob) : Void
	+editCurrentJobDetails(CurrentJob) : Void
	+enterJobOfferDetails(JobOffer) : Void
	+compareJobs(Job0, Job1) : Integer
	+countJobs() : Integer
	+isCurrentJob() : Boolean
	+rankSortJobs() : Void

User
attr:
	-comparisonSettings : ComparisonSettings
op:
	+adjustComparisonSettings() : Void

Job
attr:
	-title : String = ""
	-company : String = ""
	-location : Location = new Location()
	-costOfLiving : Integer = 0
	-yearlySalary : Float = 0.0
	-yearlyBonus : Float = 0.0
	-weeklyTeleworkDays : Integer = 0
	-leaveTime : Integer = 0
	-gymMembershipAllowance : Float = 0.0
	-isCurrent : Boolean = false
op:
	+getJobScore() : Float

CurrentJob 
-is a Job

JobOffer
-is a Job

ComparisonSettings
attr:
	-yearlySalaryWeight : Integer = 1
	-yearlyBonusWeight : Integer = 1
	-weeklyTeleworkDaysWeight : Integer = 1
	-leaveTimeWeight : Integer = 1
	-gymMembershipAllowanceWeight : Integer = 1
op:
	+setYearlySalaryWeight(Integer) : Void
	+setYearlyBonusWeight(Integer) : Void
	+setWeeklyTeleworkDaysWeight(Integer) : Void
	+setLeaveTimeWeight(Integer) : Void
	+setGymMembershipAllowanceWeight(Integer) : Void

Location
attr:
	-city : String = ""
	-state : String = ""

1- When the app is started, the user is presented with the main menu, which allows the user to (1) enter or edit current job details, (2) enter job offers, (3) adjust the comparison settings, or (4) compare job offers (disabled if no job offers were entered yet). To be precise, this functionality will be enabled if there are either (1) at least two job offers, in case there is no current job, or (2) at least one job offer, in case there is a current job.
 

2- When choosing to enter current job details, a user will:
a- Be shown a user interface to enter (if it is the first time) or edit all of the details of their current job, which consist of:
	Title
	Company
	Location (entered as city and state)
	Cost of living in the location (expressed as an index)
	Yearly salary
	Yearly bonus
	Allowed weekly telework days (expressed as the number of days per week allowed for remote work, inclusively between 0 and 5)
	Leave time (vacation days and holiday and/or sick leave, as a single overall number of days)
	Gym membership allowance ($0 to $500 annually)
b- Be able to either save the job details or cancel and exit without saving, returning in both cases to the main menu.

3- When choosing to enter job offers, a user will:
a- Be shown a user interface to enter all of the details of the offer, which are the same ones listed above for the current job.
b- Be able to either save the job offer details or cancel.
c- Be able to (1) enter another offer, (2) return to the main menu, or (3) compare the offer (if they saved it) with the current job details (if present).

4- When adjusting the comparison settings, the user can assign integer weights to:
	Yearly salary
	Yearly bonus
	Allowed weekly telework days
	Leave time
	Gym membership allowance
If no weights are assigned, all factors are considered equal.

5- When choosing to compare job offers, a user will:
a- Be shown a list of job offers, displayed as Title and Company, ranked from best to worst (see below for details), and including the current job (if present), clearly indicated.
b- Select two jobs to compare and trigger the comparison.
c- Be shown a table comparing the two jobs, displaying, for each job:
	Title
	Company
	Location 
	Yearly salary adjusted for cost of living
	Yearly bonus adjusted for cost of living
	Allowed weekly telework days
	Leave time
	Gym Membership Allowance
d- Be offered to perform another comparison or go back to the main menu.

6- When ranking jobs, a jobâ€™s score is computed as the weighted sum of:
	AYS + AYB + GYM + (LT * AYS / 260) - ((260 - 52 * RWT) * (AYS / 260) / 8)
where:
	AYS = yearly salary adjusted for cost of living
	AYB = yearly bonus adjusted for cost of living
	GYM = Gym Membership Allowance ($0 to $500 annually)
	LT = leave time
	RWT = telework days per week
The rationale for the RWT subformula is:
a- value of an employee hour = (AYS / 260) / 8
b- commute hours per year (assuming a 1-hour/day commute) =
	1 * (260 - 52 * RWT)
c- therefore travel-time cost = (260 - 52 * RWT) * (AYS / 260) / 8

For example, if the weights are 2 for the yearly salary, 2 for Gym Membership, and 1 for all other factors, the score would be computed as:


2/7 * AYS + 1/7 * AYB + 2/7 * GYM + 1/7 * (LT * AYS / 260) - 1/7 * ((260 - 52 * RWT) * (AYS / 260) / 8)

7- The user interface must be intuitive and responsive.
8- For simplicity, you may assume there is a single system running the app (no communication or saving between devices is necessary).
